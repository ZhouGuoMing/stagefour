{
  "uid" : "a9607639b6976e22",
  "name" : "test_mul[third]",
  "fullName" : "test_calc.TestCalc#test_mul",
  "historyId" : "9631afff4cd1d9cdc57134b068148cbb",
  "time" : {
    "start" : 1613919979651,
    "stop" : 1613919979652,
    "duration" : 1
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 0.08 == 0.8",
  "statusTrace" : "self = <test_calc.TestCalc object at 0x00000220AC0029A0>, get_calc = <calc.Calculator object at 0x00000220ABFBA2E0>, get_muldatas = [0.4, 0.2, 0.8]\n\n    @allure.story(\"测试乘法\")\n    @pytest.mark.mul\n    @pytest.mark.run(order=3)\n    def test_mul(self, get_calc, get_muldatas):\n        # 调用除法方法\n        with allure.step(\"计算两个数的相乘积\"):\n            result = get_calc.mul(get_muldatas[0], get_muldatas[1])\n        if isinstance(result, float):\n            result = round(result, 2)\n        # 得到相乘结果之后写断言\n>       assert result == get_muldatas[2]\nE       assert 0.08 == 0.8\n\ntest_calc.py:87: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_calc",
    "time" : {
      "start" : 1613919979552,
      "stop" : 1613919979552,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "get_muldatas",
    "time" : {
      "start" : 1613919979651,
      "stop" : 1613919979651,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 0.08 == 0.8",
    "statusTrace" : "self = <test_calc.TestCalc object at 0x00000220AC0029A0>, get_calc = <calc.Calculator object at 0x00000220ABFBA2E0>, get_muldatas = [0.4, 0.2, 0.8]\n\n    @allure.story(\"测试乘法\")\n    @pytest.mark.mul\n    @pytest.mark.run(order=3)\n    def test_mul(self, get_calc, get_muldatas):\n        # 调用除法方法\n        with allure.step(\"计算两个数的相乘积\"):\n            result = get_calc.mul(get_muldatas[0], get_muldatas[1])\n        if isinstance(result, float):\n            result = round(result, 2)\n        # 得到相乘结果之后写断言\n>       assert result == get_muldatas[2]\nE       assert 0.08 == 0.8\n\ntest_calc.py:87: AssertionError",
    "steps" : [ {
      "name" : "计算两个数的相乘积",
      "time" : {
        "start" : 1613919979652,
        "stop" : 1613919979652,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "stepsCount" : 0,
      "hasContent" : false
    } ],
    "attachments" : [ {
      "uid" : "751d46c2f6e20f69",
      "name" : "stdout",
      "source" : "751d46c2f6e20f69.txt",
      "type" : "text/plain",
      "size" : 34
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1,
    "stepsCount" : 1,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "get_muldatas::0",
    "time" : {
      "start" : 1613919979655,
      "stop" : 1613919979655,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "测试乘法"
  }, {
    "name" : "feature",
    "value" : "测试计算器"
  }, {
    "name" : "tag",
    "value" : "mul"
  }, {
    "name" : "tag",
    "value" : "run(order=3)"
  }, {
    "name" : "suite",
    "value" : "test_calc"
  }, {
    "name" : "subSuite",
    "value" : "TestCalc"
  }, {
    "name" : "host",
    "value" : "DESKTOP-JVUG022"
  }, {
    "name" : "thread",
    "value" : "18132-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_calc"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "get_muldatas",
    "value" : "[0.4, 0.2, 0.8]"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "run(order=3)", "mul" ]
  },
  "source" : "a9607639b6976e22.json",
  "parameterValues" : [ "[0.4, 0.2, 0.8]" ]
}